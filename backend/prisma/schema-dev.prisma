// =============================================================================
// DEVELOPMENT PRISMA SCHEMA - SQLite DATABASE
// =============================================================================
// MyMeds Pharmacy Inc. - Development Database Schema
// Generated: September 21, 2025
// =============================================================================

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

// =============================================================================
// USER MANAGEMENT
// =============================================================================

model User {
  id            Int      @id @default(autoincrement())
  email         String   @unique
  name          String?
  password      String
  role          String   @default("USER")
  isActive      Boolean  @default(true)
  emailVerified Boolean  @default(false)
  lastLoginAt   DateTime?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Relations
  orders        Order[]
  prescriptions Prescription[]
  appointments  Appointment[]
  reviews       Review[]

  @@map("users")
}

// =============================================================================
// PRODUCT MANAGEMENT
// =============================================================================

model Category {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  // Relations
  products    Product[]

  @@map("categories")
}

model Product {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  price       Float
  stock       Int       @default(0)
  imageUrl    String?
  categoryId  Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  // Relations
  category    Category  @relation(fields: [categoryId], references: [id])
  orderItems  OrderItem[]

  @@map("products")
}

// =============================================================================
// ORDER MANAGEMENT
// =============================================================================

model Order {
  id           Int       @id @default(autoincrement())
  userId       Int
  status       String    @default("PENDING")
  total        Float
  shippingAddress String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  notified     Boolean   @default(false)

  // Relations
  user         User      @relation(fields: [userId], references: [id])
  items        OrderItem[]

  @@map("orders")
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  price     Float

  // Relations
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])

  @@map("order_items")
}

// =============================================================================
// PRESCRIPTION MANAGEMENT
// =============================================================================

model Prescription {
  id              Int       @id @default(autoincrement())
  userId          Int
  patientName     String
  medication      String
  dosage          String
  instructions    String?
  doctorName      String?
  doctorPhone     String?
  status          String    @default("PENDING")
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  notified        Boolean   @default(false)

  // Relations
  user            User      @relation(fields: [userId], references: [id])

  @@map("prescriptions")
}

// =============================================================================
// APPOINTMENT MANAGEMENT
// =============================================================================

model Appointment {
  id          Int       @id @default(autoincrement())
  userId      Int
  patientName String
  email       String
  phone       String?
  date        DateTime
  time        String
  reason      String?
  status      String    @default("PENDING")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  notified    Boolean   @default(false)

  // Relations
  user        User      @relation(fields: [userId], references: [id])

  @@map("appointments")
}

// =============================================================================
// CONTACT & REVIEWS
// =============================================================================

model ContactForm {
  id        Int       @id @default(autoincrement())
  name      String
  email     String
  phone     String?
  subject   String
  message   String
  status    String    @default("NEW")
  createdAt DateTime  @default(now())
  notified  Boolean   @default(false)

  @@map("contact_forms")
}

model Review {
  id        Int       @id @default(autoincrement())
  userId    Int
  rating    Int
  comment   String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  // Relations
  user      User      @relation(fields: [userId], references: [id])

  @@map("reviews")
}

// =============================================================================
// INTEGRATION SETTINGS
// =============================================================================

model WooCommerceSettings {
  id              Int       @id @default(autoincrement())
  enabled         Boolean   @default(false)
  storeUrl        String    @default("")
  consumerKey     String    @default("")
  consumerSecret  String    @default("")
  webhookSecret   String    @default("")
  lastSync        DateTime?
  lastError       String?
  updatedAt       DateTime  @updatedAt

  @@map("woocommerce_settings")
}

model WordPressSettings {
  id                  Int       @id @default(autoincrement())
  enabled             Boolean   @default(false)
  siteUrl             String    @default("")
  username            String    @default("")
  applicationPassword String    @default("")
  lastSync            DateTime?
  lastError           String?
  updatedAt           DateTime  @updatedAt

  @@map("wordpress_settings")
}

