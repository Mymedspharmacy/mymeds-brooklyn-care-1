# Nginx Configuration for MyMeds Pharmacy VPS KVM1 Hostinger
# Optimized for scalability and performance

# Upstream backend servers (PM2 cluster instances)
upstream mymeds_backend {
    least_conn; # Load balancing algorithm
    server 127.0.0.1:4000 weight=1 max_fails=3 fail_timeout=30s;
    server 127.0.0.1:4001 weight=1 max_fails=3 fail_timeout=30s;
    
    # Health check
    keepalive 32;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api:10m rate=100r/m;
limit_req_zone $binary_remote_addr zone=login:10m rate=10r/m;
limit_req_zone $binary_remote_addr zone=contact:10m rate=20r/m;

# Gzip compression
gzip on;
gzip_vary on;
gzip_min_length 1024;
gzip_proxied any;
gzip_comp_level 6;
gzip_types
    text/plain
    text/css
    text/xml
    text/javascript
    application/json
    application/javascript
    application/xml+rss
    application/atom+xml
    image/svg+xml;

# Main server block
server {
    listen 80;
    listen [::]:80;
    server_name your-domain.com www.your-domain.com;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name your-domain.com www.your-domain.com;
    
    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Client max body size
    client_max_body_size 10M;
    
    # Proxy buffers
    proxy_buffering on;
    proxy_buffer_size 4k;
    proxy_buffers 8 4k;
    proxy_busy_buffers_size 8k;
    
    # Timeouts
    proxy_connect_timeout 30s;
    proxy_send_timeout 30s;
    proxy_read_timeout 30s;
    
    # Frontend static files
    location / {
        root /var/www/mymeds-frontend/dist;
        try_files $uri $uri/ /index.html;
        
        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary Accept-Encoding;
        }
        
        # Cache HTML files
        location ~* \.html$ {
            expires 1h;
            add_header Cache-Control "public, must-revalidate";
        }
    }
    
    # API endpoints with rate limiting
    location /api/ {
        # Rate limiting
        limit_req zone=api burst=20 nodelay;
        
        # Proxy to backend
        proxy_pass http://mymeds_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Health check endpoint (no rate limiting)
        location /api/health {
            limit_req off;
            proxy_pass http://mymeds_backend;
        }
        
        # Admin endpoints (stricter rate limiting)
        location /api/admin {
            limit_req zone=login burst=5 nodelay;
            proxy_pass http://mymeds_backend;
        }
        
        # Auth endpoints (stricter rate limiting)
        location /api/auth {
            limit_req zone=login burst=5 nodelay;
            proxy_pass http://mymeds_backend;
        }
        
        # Contact endpoints
        location /api/contact {
            limit_req zone=contact burst=10 nodelay;
            proxy_pass http://mymeds_backend;
        }
    }
    
    # WooCommerce webhooks (no rate limiting)
    location /api/woocommerce/webhooks {
        limit_req off;
        proxy_pass http://mymeds_backend;
    }
    
    # Status monitoring (no rate limiting)
    location /status {
        limit_req off;
        proxy_pass http://mymeds_backend;
    }
    
    # Health check (no rate limiting)
    location /health {
        limit_req off;
        proxy_pass http://mymeds_backend;
    }
    
    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /var/www/mymeds-frontend/dist;
    }
}

# HTTP/2 Server Push (optional, for performance)
server {
    listen 443 ssl http2;
    server_name your-domain.com;
    
    # Server push for critical resources
    http2_push /css/main.css;
    http2_push /js/main.js;
    
    # ... rest of configuration
}
